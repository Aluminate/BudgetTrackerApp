@{
    ViewBag.Title = "Statistics";
}
@model BudgetTrackerApp.Models.StatisticsViewModel

<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript" src="https://www.google.com/jsapi"></script>

<script>
    google.load("visualization", "1", { packages: ["corechart", "table"] });
    google.setOnLoadCallback(drawChart);
    function drawChart() {
        $.ajax({
            type: "POST",
            url: "getExpensesUserCategories",
            data: "{}",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                var data = google.visualization.arrayToDataTable(response);

                //Pie
                var options = {
                    title: 'Expenses by User Categories'
                };
                var chart = new google.visualization.BarChart($("#displayChart")[0]);
                chart.draw(data, options);
            },
            failure: function (response) {
                alert(response.d);
            },
            error: function (response) {
                alert(response.d);
            }
        })
    };
    $(document).ready(function () {
        var userBudget = 0;
        var daysMultiplier = 30.42;
        $(document).ready(function () {
            $('select[name=dataToDisplay]').change(function () {
                $("#expensesUserCategories").hide();
                $("#expensesIncomeTime").hide();
                $("#netOverTime").hide();
                switch ($('select[name=dataToDisplay]').val()) {
                    case 'expensesUserCategories':
                        $('#expensesUserCategories').show();
                        break;
                    case 'expensesIncomeTime':
                        $('#expensesIncomeTime').show();
                        break;
                    case 'netOverTime':
                        $('#netOverTime').show();
                        break;
                    default:
                        alert("An error has occurred.");
                }
            });
        });

        $("#expensesUserCategoriesButton").click(function () {
            var categories = [];
            $("input[name='selectedCategories[]']:checked").each(function () {
                categories.push(parseInt($(this).val()));
            });
            $.ajax({
                type: "POST",
                url: "getExpensesUserCategories",
                data: JSON.stringify({
                    dateRangeStart: $("input[name=timeRangeStart]").val(),
                    dateRangeEnd: $("input[name=timeRangeEnd]").val(),
                    categories: categories
                }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    var data = google.visualization.arrayToDataTable(response);


                    var options = {
                        title: 'Expenses by User Categories'
                    };
                    switch ($('select[name=displayType]').val()) {
                        case 'barChart':
                            var chart = new google.visualization.BarChart($("#displayChart")[0]);
                            break;
                        case 'pieChart':
                            var chart = new google.visualization.PieChart($("#displayChart")[0]);
                            break;
                        case 'table':
                            var chart = new google.visualization.Table($("#displayChart")[0]);
                            break;
                        default:
                            alert("An error has occurred.");
                    }
                    chart.draw(data, options);
                },
                failure: function (response) {
                    alert(response.d);
                },
                error: function (response) {
                    alert(response.d);
                }
            })
        });

        $("#expensesIncomeTimeButton").click(function () {
            $.ajax({
                type: "POST",
                url: "GetExpensesIncomeOverTime",
                data: JSON.stringify({
                    dateRangeStart: $("input[name=timeRangeStart]").val(),
                    dateRangeEnd: $("input[name=timeRangeEnd]").val(),
                    timeInterval: $("select[name=timeIntervalExpensesIncomeTime]").val(),
                    showIncome: $("input[name=dataToDisplayCheckboxes][value=Income]").prop("checked"),
                    showExpenses: $("input[name=dataToDisplayCheckboxes][value=Expenses]").prop("checked")
                }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    var data = google.visualization.arrayToDataTable(response);


                    var options = {
                        title: 'Income and Expenses over Time'
                    };
                    var chart = new google.visualization.LineChart($("#displayChart")[0]);
                    chart.draw(data, options);
                },
                failure: function (response) {
                    alert(response.d);
                },
                error: function (response) {
                    alert(response.d);
                }
            })
        });

        $("#netOverTimeButton").click(function () {
            $.ajax({
                type: "POST",
                url: "getNetOverTime",
                data: JSON.stringify({
                    dateRangeStart: $("input[name=timeRangeStart]").val(),
                    dateRangeEnd: $("input[name=timeRangeEnd]").val(),
                    timeInterval: $("select[name=timeIntervalNetOverTime]").val()
                }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    var data = google.visualization.arrayToDataTable(response);


                    var options = {
                        title: 'Income minus Expenses (Net) over Time'
                    };
                    var chart = new google.visualization.LineChart($("#displayChart")[0]);
                    chart.draw(data, options);
                },
                failure: function (response) {
                    alert(response.d);
                },
                error: function (response) {
                    alert(response.d);
                }
            })
        });

        $("#viewDataTable").click(function () {
            $("#chartDiv").hide();
            $("#datatableDiv").show();

            $.ajax({
                type: "POST",
                url: "getDatatable",
                data: JSON.stringify({
                    dateRangeStart: $("input[name=timeRangeStart]").val(),
                    dateRangeEnd: $("input[name=timeRangeEnd]").val(),
                    timeInterval: $("select[name=timeIntervalDatatable]").val()
                }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    var data = google.visualization.arrayToDataTable(response);


                    var options = {
                        title: 'Datatable',
                        width: 1000,
                        chartArea: { left: 0, top: 0, width: "100%", height: "100%" }
                    };
                    var chart = new google.visualization.Table($("#drawDataTable")[0]);
                    chart.draw(data, options);
                },
                failure: function (response) {
                    alert(response.d);
                },
                error: function (response) {
                    alert(response.d);
                }
            })
        });

        $("select[name=timeIntervalDatatable]").change(function () {
            $.ajax({
                type: "POST",
                url: "getDatatable",
                data: JSON.stringify({
                    dateRangeStart: $("input[name=timeRangeStart]").val(),
                    dateRangeEnd: $("input[name=timeRangeEnd]").val(),
                    timeInterval: $("select[name=timeIntervalDatatable]").val()
                }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    var data = google.visualization.arrayToDataTable(response);


                    var options = {
                        title: 'Datatable',
                        width: 1000,
                        chartArea: {left: 0, top: 0, width: "100%", height: "100%"}
                    };
                    var chart = new google.visualization.Table($("#drawDataTable")[0]);
                    chart.draw(data, options);
                },
                failure: function (response) {
                    alert(response.d);
                },
                error: function (response) {
                    alert(response.d);
                }
            })
        });

        $("#backFromDatatable").click(function () {
            $("#chartDiv").show();
            $("#datatableDiv").hide();
        });
    });
</script>
<div class="jumbotron">
    <h1 class="text-center">@(Request.Cookies["BudgetUsername"]?.Value)'s Statistics</h1>
</div>

<div class="row">
    <div id="chartDiv">
        <div id="chartArea" class="col-lg-6">
            <div id="displayChart"></div>
        </div>
        <div id="menuArea" class="col-lg-6">
            <input type="button" id="viewDataTable" class="btn btn-default pull-left" value="View Data Table"><br /><br />
            <div class="panel panel-default">
                <div class="panel-body">
                    <strong>Time Range:</strong><br />
                    <label for="timeRangeStart">Start:</label>
                    <input type="date" name="timeRangeStart" /><br />

                    <label for="timeRangeEnd">End:</label>
                    <input type="date" name="timeRangeEnd" /><br />

                    <label for="dataToDisplay">Data:</label>
                    <select name="dataToDisplay">
                        <option value="expensesUserCategories">Expenses by User Categories</option>
                        <option value="expensesIncomeTime">Expenses and Income over Time</option>
                        <option value="netOverTime">Income minus Expenses (Net) over Time</option>
                    </select><br />
                    <div id="expensesUserCategories">
                        <label for="displayType">Display Type:</label>
                        <select name="displayType">
                            <option value="barChart">Bar Chart</option>
                            <option value="pieChart">Pie Chart</option>
                            <option value="table">Table</option>
                        </select><br />
                        @if (Model.Categories != null)
                        {
                            <strong>Data to Display:</strong><br />
                            foreach (var category in Model.Categories)
                            {
                                <input type="checkbox" name="selectedCategories[]" value="@category.Value" checked>
                                <label for="selectedCategories[]">@category.Text</label><br />
                            }
                        }
                        <input type="button" id="expensesUserCategoriesButton" class="btn btn-default pull-right" value="Submit">
                    </div>

                    <div id="expensesIncomeTime" hidden>
                        <label for="timeIntervalExpensesIncomeTime">Time Interval:</label>
                        <select name="timeIntervalExpensesIncomeTime">
                            <option value="daily">Daily</option>
                            <option value="weekly">Weekly</option>
                            <option value="monthly">Monthly</option>
                            <option value="yearly">Yearly</option>
                        </select><br />
                        <input type="checkbox" name="dataToDisplayCheckboxes" value="Income" checked>
                        <label for="dataToDisplayCheckboxes">Income</label><br />
                        <input type="checkbox" name="dataToDisplayCheckboxes" value="Expenses" checked>
                        <label for="dataToDisplayCheckboxes">Expenses</label><br />
                        <input type="button" id="expensesIncomeTimeButton" class="btn btn-default pull-right" value="Submit">
                    </div>

                    <div id="netOverTime" hidden>
                        <label for="timeIntervalNetOverTime">Time Interval:</label>
                        <select name="timeIntervalNetOverTime">
                            <option value="daily">Daily</option>
                            <option value="weekly">Weekly</option>
                            <option value="monthly">Monthly</option>
                            <option value="yearly">Yearly</option>
                        </select><br />
                        <input type="button" id="netOverTimeButton" class="btn btn-default pull-right" value="Submit">
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="datatableDiv" hidden>
        <div id="row">
            <label for="timeIntervalDatatable">Time Interval:</label>
            <select name="timeIntervalDatatable">
                <option value="daily">Daily</option>
                <option value="weekly">Weekly</option>
                <option value="monthly">Monthly</option>
                <option value="yearly">Yearly</option>
            </select>
            <input type="button" id="backFromDatatable" class="btn btn-default pull-right" value="Back">
        </div>
        <div id="drawDataTable"></div>
    </div>
</div>